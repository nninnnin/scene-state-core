{"version":3,"sources":["../src/SceneStateProvider.tsx","../src/useSceneState.tsx","../src/index.ts"],"names":["useRef","useEffect","init","useState","getState"],"mappings":";;;;;;;AAWO,IAAM,qBAAqB,CAAC;AAAA,EACjC,YAAA;AAAA,EACA;AACF,CAAA,KAAqB;AACnB,EAAA,MAAM,MAAA,GAASA,aAAO,KAAK,CAAA;AAE3B,EAAAC,eAAA,CAAU,MAAM;AACd,IAAA,IAAI,CAAC,OAAO,OAAA,EAAS;AACnB,MAAAC,SAAA,CAAK,YAAY,CAAA;AACjB,MAAA,MAAA,CAAO,OAAA,GAAU,IAAA;AAAA,IACnB;AAAA,EACF,CAAA,EAAG,CAAC,YAAY,CAAC,CAAA;AAEjB,EAAA,6DAAU,QAAA,EAAS,CAAA;AACrB;ACtBO,IAAM,gBAAgB,MAAM;AACjC,EAAA,MAAM,CAAC,UAAA,EAAY,CAAC,IAAIC,cAAA,CAAS,MAAMC,eAAU,CAAA;AAEjD,EAAA,OAAO,EAAE,UAAA,EAAW;AACtB;;;ACPO,SAAS,UAAA,GAAa;AAC3B,EAAA,OAAO,aAAA;AACT","file":"index.cjs","sourcesContent":["import {\n  PropsWithChildren,\n  useEffect,\n  useRef,\n} from \"react\";\nimport { init, State } from \"@ssc/core\";\n\ntype ProviderProps = PropsWithChildren<{\n  initialState: State;\n}>;\n\nexport const SceneStateProvider = ({\n  initialState,\n  children,\n}: ProviderProps) => {\n  const inited = useRef(false);\n\n  useEffect(() => {\n    if (!inited.current) {\n      init(initialState);\n      inited.current = true;\n    }\n  }, [initialState]);\n\n  return <>{children}</>;\n};\n","import { useState } from \"react\";\nimport { getState } from \"@ssc/core\";\n\nexport const useSceneState = () => {\n  const [sceneState, _] = useState(() => getState());\n\n  return { sceneState };\n};\n","export function useExample() {\n  return \"react-0.0.0\";\n}\n\nexport { SceneStateProvider } from \"./SceneStateProvider\";\nexport { useSceneState } from \"./useSceneState\";\n"]}